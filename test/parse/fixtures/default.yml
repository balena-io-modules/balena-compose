version: '2.4'

networks:
  n1: {}
  n2:

volumes:
  v1: {}
  v2:

services:
  s1:
    build: ./s1
    ports:
      - '80:5000'
    depends_on:
      s3:
        condition: service_started
    environment:
      - SOME_VAR=some=value
    env_file: ./test-env-files/one/two/three/../../.env

  s2:
    build:
      context: ./s2
      target: stage1
      network: none
    depends_on:
      - s1
      - s3
    privileged: true
    environment:
      SOME_VAR: some value
    env_file:
      - ./test-env-files/one/two/three/../../.env
      - ./test-env-files/one/two/three/../.env
      - ./test-env-files/one/two/three/.env
    extra_hosts:
      foo: 127.0.0.1
    volumes:
      - 'v2:/v2:ro'

  s3:
    image: some/image
    ports:
      - 1000
      - '1001:1002'
      - '1003:1004/tcp'
    extra_hosts:
      - 'bar:8.8.8.8'
    tmpfs:
      - /tmp1
    volumes:
      - type: volume
        source: v1
        target: /v1
      - type: tmpfs
        target: /tmp2

  s4:
    image: some/image
    volumes:
      - /var/run/docker.sock:/host/run/docker.sock
      - /run/dbus:/host/run/dbus
      - /sys:/sys
      - /proc:/proc
      - /lib/modules:/lib/modules
      - /lib/firmware:/lib/firmware
      - /var/log/journal:/var/log/journal
      - /run/log/journal:/run/log/journal
      - /etc/machine-id:/etc/machine-id